Para criar migrations
Ex: php artisan make:migration create_listings_table

Para executar migrations:
php artisan migrate

Para executar seed:
php artisan db:seed

Para atualizar as tabelas:
php artisan migrate:refresh

Para criar model pelo cli:
ex: php artisan make:model Listing

Para criar um novo arquivo de fábrica, para gerar dados de teste
ex:hp artisan make:factory ListingFactory

Para criar uma controller:
Ex: php artisan make:controller ListingController

Convesao de nomeclaturas para funcoes de Controllers

index - Show all listing
show - Show single listing
create - show form new listing
store - Store new listing
edit - Show form to edit listing
update - Update listing
destroy - Delete listing

Visualizar dados das requisicoes:
clockwork -> instalar no chrome e com composer, mostra tempo de respota e querys

Cadastro:
Precisa atribuir os campos que aceitam valores em massa.

A atribuição em massa é uma funcionalidade no Laravel que permite definir vários atributos de um modelo de uma só vez, passando um array de pares chave-valor. No entanto, por motivos de segurança, o Laravel exige que você especifique explicitamente quais campos podem ser atribuídos em massa. Isso é feito definindo uma propriedade $fillable no modelo que lista os nomes dos campos que podem ser atribuídos em massa.
Para corrigir essa mensagem de erro, você deve abrir o arquivo do modelo Listing e adicionar title à propriedade $fillable desta forma:

Ex:
protected $fillable = ['title', ...outros campos...];

Outra maneira de resolver e adicionando :

public function boot(): void
{
    Model::unguard();
}

no AppServiceProvider


Para personalizar listagem:

1 - php artisan vendor:publish (é uma ferramenta útil para personalizar pacotes de fornecedores em seus aplicativos Laravel, permitindo que você faça alterações em arquivos de configuração, visão e linguagem para atender às necessidades específicas do seu aplicativo.)
2 - em AppServiceProvider -> boot adicionar Paginator::useBootstrapFive(); (5 foi a opcao que eu escolhi em php artisan vendor:publish)

Upload de imagem:

1 - Em config->filesystem podemos definir aonde o arquivo sera salvo4
2 - Os arquivos locais e publicos sao salvos na pasta storage
3 - O comando php artisan storage:link linka os arquivos da pasta storage com a pasta public